name: Nessus Scan on Akaunting

on:
  push:
    branches:
      - main

jobs:
  setup-and-scan:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Vérifier le code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Étape 2 : Assurer que Docker est configuré
    - name: Ensure Docker is Installed
      run: |
        docker --version || (sudo apt-get update && sudo apt-get install -y docker.io)

    # Étape 3 : Lancer MySQL
    - name: Start MySQL Container
      run: |
        docker run --name akaunting-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=akaunting -d mysql:5.7
        sleep 20 # Attendre que MySQL démarre correctement

    # Étape 4 : Lancer Akaunting
    - name: Start Akaunting Container
      run: |
        docker run --name akaunting --link akaunting-mysql:mysql -e DB_CONNECTION=mysql -e DB_HOST=mysql -e DB_DATABASE=akaunting -e DB_USERNAME=root -e DB_PASSWORD=root -d akaunting/akaunting
        sleep 20 # Attendre que l'application démarre correctement

    # Étape 5 : Installer Nessus
    - name: Install Nessus
      run: |
        wget -O Nessus-10.5.3-ubuntu910_amd64.deb https://www.tenable.com/downloads/nessus?loginAttempted=true
        sudo dpkg -i Nessus-10.5.3-ubuntu910_amd64.deb || sudo apt-get install -f -y
        sudo systemctl start nessusd
        sudo systemctl enable nessusd
        sleep 60 # Attendre que Nessus démarre correctement

    # Étape 6 : Récupérer l'IP du conteneur Akaunting
    - name: Get Akaunting Container IP
      id: akaunting_ip
      run: |
        export AKAUNTING_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' akaunting)
        echo "AKAUNTING_IP=$AKAUNTING_IP" >> $GITHUB_ENV

    # Étape 7 : Scanner l'application Akaunting avec Nessus
    - name: Run Nessus Scan
      run: |
        sudo apt-get install -y jq
        export SCAN_NAME="Akaunting Scan"
        export TARGETS=$AKAUNTING_IP
        export RESULTS_FILE=nessus_scan_results.json

        # Remplacer cette commande par une API Nessus ou un outil de scan si nécessaire
        echo "Simulating Nessus Scan on $TARGETS"
        echo '{ "results": "Scan completed successfully for $TARGETS" }' > $RESULTS_FILE

    # Étape 8 : Stocker les résultats du scan
    - name: Upload Scan Results
      uses: actions/upload-artifact@v3
      with:
        name: nessus-scan-results
        path: nessus_scan_results.json
